# name of executable

ELF=$(TARGET)

# Tool path

TOOLROOT=

# Library path

LIBROOT=../STM32CubeF1

# Tools

CC=$(TOOLROOT)arm-none-eabi-gcc
LD=$(TOOLROOT)arm-none-eabi-gcc
AR=$(TOOLROOT)arm-none-eabi-ar
AS=$(TOOLROOT)arm-none-eabi-as

# Code Paths

DEVICE=$(LIBROOT)/Drivers/CMSIS/Device/ST/STM32F1xx
CORE=$(LIBROOT)/Drivers/CMSIS/Core/Include
PERIPH=$(LIBROOT)/Libraries/STM32F10x_StdPeriph_Driver

# Search path for standard files

vpath %.c $(TEMPLATEROOT)

# Search path for perpheral library

vpath %.c $(CORE)
vpath %.c $(PERIPH)/src
vpath %.c $(DEVICE)/source/Templates

#  Processor specific

PTYPE = STM32F100xB
LDSCRIPT = $(TEMPLATEROOT)/stm32f100.ld
STARTUP= $(BUILD_DIR)startup_stm32f10x.o $(BUILD_DIR)system_stm32f1xx.o

# Compilation Flags

FULLASSERT = -DUSE_FULL_ASSERT

LDFLAGS+= -T$(LDSCRIPT) -mthumb -mcpu=cortex-m3 -specs=nano.specs -specs=nosys.specs
CFLAGS+= -mcpu=cortex-m3 -mthumb
CFLAGS+= -I$(TEMPLATEROOT) -I$(DEVICE)/Include -I$(CORE) -I$(PERIPH)/inc -I.
CFLAGS+= -D$(PTYPE) -DUSE_STDPERIPH_DRIVER $(FULLASSERT)
CFLAGS+= -I$(TEMPLATEROOT)/Library/ff9/src -I$(TEMPLATEROOT)/Library

# Build executable

all: $(BUILD_DIR)$(ELF)

$(BUILD_DIR)$(ELF) : $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)

# compile and generate dependency info

$(BUILD_DIR)%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@
	$(CC) -MM $(CFLAGS) $< > $(BUILD_DIR)$*.d

$(OBJ)%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f $(OBJS) $(OBJS:.o=.d) $(BUILD_DIR)$(ELF) $(CLEANOTHER)

debug: $(ELF)
	arm-none-eabi-gdb $(ELF)


# pull in dependencies

-include $(OBJS:.o=.d)




